{"version":3,"file":"BaseParanoid.js","sourceRoot":"","sources":["BaseParanoid.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;GAgBG;AACH,sCAAwC;AAExC,+DAQ8B;AAC9B,2CAAsD;AACtD,6CAAoD;AAEpD,MAAsB,YAAgB,SAAQ,qBAAY;IAsBtD,YACI,MAAwB,EACxB,OAAsB,IACtB,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;CAChC;AArBG;IAJC,cAAQ,CAAC,QAAQ,CAAC;IAClB,oCAAa;IACb,iCAAU;IACV,6BAAM,CAAC,+BAAQ,CAAC,MAAM,CAAC;;wCACG;AAK3B;IAHC,cAAQ,CAAC,MAAM,CAAC;IAChB,kBAAK;IACL,gCAAS;8BACQ,IAAI;+CAAC;AAKvB;IAHC,cAAQ,CAAC,MAAM,CAAC;IAChB,kBAAK;IACL,gCAAS;8BACQ,IAAI;+CAAC;AAKvB;IAHC,cAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;IACtB,0BAAa;IACb,gCAAS;8BACQ,IAAI;+CAAC;AApB3B,oCA0BC","sourcesContent":["/*!\n * @imqueue/sequelize - Sequelize ORM refines for @imqueue\n *\n * Copyright (c) 2019, imqueue.com <support@imqueue.com>\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\nimport { property } from '@imqueue/rpc';\nimport { ModelAttributes } from 'sequelize';\nimport {\n    AutoIncrement,\n    Column,\n    CreatedAt,\n    DataType,\n    DeletedAt,\n    PrimaryKey,\n    UpdatedAt,\n} from 'sequelize-typescript';\nimport { BaseModel, BuildOptions } from './BaseModel';\nimport { Index, NullableIndex } from './decorators';\n\nexport abstract class BaseParanoid<T> extends BaseModel<T> {\n    @property('number')\n    @AutoIncrement\n    @PrimaryKey\n    @Column(DataType.BIGINT)\n    public id: string | number;\n\n    @property('Date')\n    @Index\n    @CreatedAt\n    public createdAt: Date;\n\n    @property('Date')\n    @Index\n    @UpdatedAt\n    public updatedAt: Date;\n\n    @property('Date', true)\n    @NullableIndex\n    @DeletedAt\n    public deletedAt: Date;\n\n    protected constructor(\n        values?: ModelAttributes,\n        options?: BuildOptions,\n    ) { super(values, options); }\n}\n"]}