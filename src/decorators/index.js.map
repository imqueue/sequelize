{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;GAgBG;AACH,4BAA0B;AAC1B,+DAA8D;AAG9D,IAAY,WAOX;AAPD,WAAY,WAAW;IACnB,8BAAe,CAAA;IACf,4BAAa,CAAA;IACb,4BAAa,CAAA;IACb,gCAAiB,CAAA;IACjB,0BAAW,CAAA;IACX,4BAAa,CAAA;AACjB,CAAC,EAPW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAOtB;AAED,IAAY,SAGX;AAHD,WAAY,SAAS;IACjB,wBAAW,CAAA;IACX,0BAAa,CAAA;AACjB,CAAC,EAHW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAGpB;AAwBD,SAAgB,KAAK,CAAC,GAAG,IAAW;IAChC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;QAClB,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,kBAAkB,CAAC,GAAG,IAAI,CAAC;QAExD,OAAO,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,kBAAkB,CAAC,CAAC;KAC7D;IAED,OAAO,CACH,MAAW,EACX,YAAoB,EACpB,kBAAuC,EACzC,EAAE;QACA,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC;AACN,CAAC;AAdD,sBAcC;AAED,SAAS,QAAQ,CACb,MAAW,EACX,YAAoB,EACpB,kBAAuC,EACvC,UAAuC,EAAE;IAEzC,MAAM,OAAO,GAAI,iCAAU,CAAC,MAAM,CAAS,CAAC,OAAO,IAAI,EAAE,CAAC;IAC1D,iCAAU,CAAC,MAAM,EAAE;QACf,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE;gBAClB,MAAM,EAAE,YAAY;gBACpB,OAAO;aACV,CAAC;KACE,CAAC,CAAC;AACd,CAAC;AAED,4BAAuB;AACvB,qCAAgC","sourcesContent":["/*!\n * @imqueue/sequelize - Sequelize ORM refines for @imqueue\n *\n * Copyright (c) 2019, imqueue.com <support@imqueue.com>\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\nimport 'reflect-metadata';\nimport { addOptions, getOptions } from 'sequelize-typescript';\nexport type FunctionType = (...args: any[]) => any;\n\nexport enum IndexMethod {\n    BTREE = 'BTREE',\n    HASH = 'HASH',\n    GIST = 'GIST',\n    SPGIST = 'SPGIST',\n    GIN = 'GIN',\n    BRIN = 'BRIN',\n}\n\nexport enum SortOrder {\n    ASC = 'ASC',\n    DESC = 'DESC',\n}\n\nexport interface ColumnIndexOptions {\n    name: string;\n    method: IndexMethod;\n    concurrently: boolean;\n    nullsFirst: boolean;\n    order: SortOrder;\n    predicate: string;\n    expression: string;\n    include: string[];\n    collation: string;\n    opClass: string;\n    tablespace: string;\n    safe: boolean;\n    unique: boolean;\n}\n\nexport function Index(options: Partial<ColumnIndexOptions>): FunctionType;\nexport function Index(\n    target: any,\n    propertyName: string,\n    propertyDescriptor?: PropertyDescriptor,\n): void;\nexport function Index(...args: any[]): FunctionType | void {\n    if (args.length >= 2) {\n        const [target, propertyName, propertyDescriptor] = args;\n\n        return annotate(target, propertyName, propertyDescriptor);\n    }\n\n    return (\n        target: any,\n        propertyName: string,\n        propertyDescriptor?: PropertyDescriptor,\n    ) => {\n        annotate(target, propertyName, propertyDescriptor, args[0]);\n    };\n}\n\nfunction annotate(\n    target: any,\n    propertyName: string,\n    propertyDescriptor?: PropertyDescriptor,\n    options: Partial<ColumnIndexOptions> = {},\n): void {\n    const indices = (getOptions(target) as any).indices || [];\n    addOptions(target, {\n        indices: [...indices, {\n            column: propertyName,\n            options,\n        }],\n    } as any);\n}\n\nexport * from './View';\nexport * from './NullableIndex';\n"]}