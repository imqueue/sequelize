export declare const FILTER_OPS: {
    $and: symbol;
    $or: symbol;
    $gt: symbol;
    $gte: symbol;
    $lt: symbol;
    $lte: symbol;
    $ne: symbol;
    $eq: symbol;
    $not: symbol;
    $between: symbol;
    $notBetween: symbol;
    $in: symbol;
    $notIn: symbol;
    $like: symbol;
    $notLike: symbol;
    $iLike: symbol;
    $notILike: symbol;
    $regexp: symbol;
    $notRegexp: symbol;
    $iRegexp: symbol;
    $notIRegexp: symbol;
    $overlap: symbol;
    $contains: symbol;
    $contained: symbol;
    $any: symbol;
    $adjacent: symbol;
    $strictLeft: symbol;
    $strictRight: symbol;
    $noExtendRight: symbol;
    $noExtendLeft: symbol;
};
export declare class FilterInput {
    $and?: FilterInput | Array<FilterInput | number | string | boolean | null>;
    $or?: FilterInput | Array<FilterInput | number | string | boolean | null>;
    $gt?: number;
    $gte?: number;
    $lt?: number;
    $lte?: number;
    $ne?: number | string;
    $eq?: number | string | boolean | null;
    $not?: boolean;
    $between?: Array<number | string>;
    $notBetween?: Array<number | string>;
    $in?: Array<number | string | boolean | null>;
    $notIn?: Array<number | string | boolean | null>;
    $like?: string;
    $notLike?: string;
    $iLike?: string;
    $notILike?: string;
    $regexp?: string;
    $notRegexp?: string;
    $iRegexp?: string;
    $notIRegexp?: string;
    $overlap?: [number, number];
    $contains?: number | [number, number];
    $contained?: [number, number];
    $any?: number[] | string[];
    $adjacent?: [number, number];
    $strictLeft?: [number, number];
    $strictRight?: [number, number];
    $noExtendRight?: [number, number];
    $noExtendLeft?: [number, number];
}
