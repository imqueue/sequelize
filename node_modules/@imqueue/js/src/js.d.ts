/*!
 * @imqueue/js - JavaScript routines for @imqueue
 *
 * Copyright (c) 2019, imqueue.com <support@imqueue.com>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
 * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */
export declare namespace js {
    /**
     * Returns true if a given value is not undefined or null,
     * false otherwise
     *
     * @param {any} value
     * @return {boolean}
     */
    function isDefined(value: any): boolean;
    /**
     * Returns true if a given value is defined and is truthy
     *
     * @param {any} value
     * @return {boolean}
     */
    function isOk(value: any): boolean;
    /**
     * Returns true if a given value is defined and is numeric
     *
     * @param {any} value
     * @return {boolean}
     */
    function isNumeric(value: any): boolean;
    /**
     * Returns true whenever the given value is not defined or null, or empty
     * string, or empty object, or empty array.
     *
     * @param {any} value
     * @return {boolean}
     */
    function isEmpty(value: any): boolean;
    /**
     * Checks if a given value is an object type, but not null
     *
     * @param {any} obj
     * @return {boolean}
     */
    function isObject(obj: any): boolean;
    /**
     * Checks if a given value is Array
     *
     * @param {any} value
     * @return {boolean}
     */
    function isArray(value: any): boolean;
}
