"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// noinspection JSUnusedGlobalSymbols
/**
 * Logger decorator factory for class methods. Will try, catch and log errors
 * during method calls. If logger is bypassed, will use given logger, otherwise
 * will try to use logger defined on class dynamically or statically or will
 * fallback to console.
 *
 * @param {ILogger} [logger] - some special logger to use, otherwise will
 *                             try to utilize thisObject.logger or
 *                             ObjectClass.logger or fallback to console
 * @return {Function} - decorator function
 */
function logged(logger) {
    return (target, methodName, descriptor) => {
        const original = descriptor.value;
        descriptor.value = async function (...args) {
            try {
                return original && await original.apply(this, args);
            }
            catch (err) {
                (logger || this.logger || target.logger || console).error(err);
                throw err;
            }
        };
    };
}
exports.logged = logged;
//# sourceMappingURL=logged.js.map